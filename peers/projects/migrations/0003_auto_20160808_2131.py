# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-08-08 21:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import projects.models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0002_auto_20160807_2011'),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditsAchieved',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_name', models.CharField(max_length=120, verbose_name='Credit Name')),
                ('category', models.CharField(choices=[('EEE', 'Energy Efficiency & Environment'), ('RR', 'Reliability Resiliency'), ('OE', 'Operation Effectiveness'), ('CC', 'Customer Contribution')], max_length=1, verbose_name='Credit Category')),
                ('city_credit', models.BooleanField(default=False, verbose_name='City Credit')),
                ('campus_credit', models.BooleanField(default=False, verbose_name='Campus Credit')),
                ('supply_credit', models.BooleanField(default=False, verbose_name='Supply Credit')),
                ('criteria', models.CharField(choices=[('DCN', 'DCN'), ('PO', 'PO'), ('DC', 'DC'), ('PT', 'PT'), ('SP', 'SP')], max_length=2, verbose_name='Credit Criteria')),
                ('type', models.CharField(choices=[('PR', 'PR'), ('CO', 'CO'), ('BO', 'BO'), ('PR', 'PR')], max_length=2, verbose_name='Credit Type')),
                ('intent', models.CharField(max_length=200, verbose_name='Credit Intent')),
                ('delete', models.BooleanField(default=False, verbose_name='Delete')),
            ],
            options={
                'verbose_name': 'CreditsAchieved',
                'verbose_name_plural': 'CreditsAchieveds',
            },
        ),
        migrations.CreateModel(
            name='CreditsValueMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(default=0, max_length=10, verbose_name='Input Value')),
                ('from_credit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_credit_obj', to='projects.CreditsAchieved')),
                ('to_credit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_credit_obj', to='projects.CreditsAchieved')),
            ],
            options={
                'verbose_name': 'CreditsValueMapping',
                'verbose_name_plural': 'CreditsValueMappings',
            },
        ),
        migrations.CreateModel(
            name='ElectricityPlant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plant_name', models.CharField(max_length=50, verbose_name='Plant Name')),
                ('fuel_type', models.CharField(blank=True, choices=[('Coal', 'Coal'), ('Nuclear', 'Nuclear'), ('Gas', 'Gas'), ('Other', 'Other')], max_length=1, null=True, verbose_name='Fuel Type')),
                ('sei_value', models.CharField(default=0, max_length=10, verbose_name='SEI Value')),
                ('utility', models.CharField(choices=[('NTPC', 'NTPC'), ('NHPC', 'NHPC'), ('NPCIL', 'NPCIL'), ('IPGPCL', 'IPGPCL'), ('SEI', 'SEI Solar Energy Pvt. Ltd.')], max_length=1, verbose_name='Plant Utility')),
                ('type', models.CharField(choices=[('TRL', 'Thermal'), ('HDR', 'Hydro'), ('PV', 'PV')], max_length=1, verbose_name='Plant Type')),
                ('state', models.CharField(max_length=30, verbose_name='Plant State')),
                ('country', models.CharField(max_length=30, verbose_name='Plant Country')),
                ('delete', models.BooleanField(default=True, verbose_name='Delete')),
            ],
            options={
                'verbose_name': 'ElectricityPlant',
                'verbose_name_plural': 'ElectricityPlants',
            },
        ),
        migrations.CreateModel(
            name='ElectricityPlantUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_no', models.IntegerField(verbose_name='Plant Unit No.')),
                ('capacity', models.CharField(max_length=10, verbose_name='Plant Unit capacity')),
                ('commissioning', models.DateTimeField(blank=True, null=True, verbose_name='Plant Commissioning Date')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plant_unit', to='projects.ElectricityPlant')),
            ],
            options={
                'verbose_name': 'ElectricityPlantUnit',
                'verbose_name_plural': 'ElectricityPlantUnits',
            },
        ),
        migrations.CreateModel(
            name='ProjectPlantMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('electricity_deliver', models.CharField(default=0, max_length=10, verbose_name='Electricity Delivered to Project')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elec_plant', to='projects.ElectricityPlant')),
            ],
            options={
                'verbose_name': 'ProjectPlantMapping',
                'verbose_name_plural': 'ProjectPlantMappings',
            },
        ),
        migrations.CreateModel(
            name='ProjectQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('output', models.CharField(max_length=50, verbose_name='Question output for project')),
                ('file', models.FileField(blank=True, null=True, upload_to=projects.models.question_file_upload, verbose_name='Question File for Project')),
            ],
            options={
                'verbose_name': 'ProjectQuestion',
                'verbose_name_plural': 'ProjectQuestions',
            },
        ),
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Strategy Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Strategy Description')),
                ('successmessage', models.TextField(blank=True, null=True, verbose_name='Strategy Success Message')),
                ('failuremessage', models.TextField(blank=True, null=True, verbose_name='Strategy Failure Message')),
                ('required', models.BooleanField(default=False, verbose_name='Strategy Required')),
                ('delete', models.BooleanField(default=False, verbose_name='Delete')),
                ('credit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_strategy', to='projects.CreditsAchieved')),
            ],
            options={
                'verbose_name': 'Strategy',
                'verbose_name_plural': 'Strategys',
            },
        ),
        migrations.CreateModel(
            name='StrategyQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='Question')),
                ('code', models.CharField(choices=[('RRS11', 'RRS-1.1'), ('RRS12', 'RRS-1.2'), ('RRS13', 'RRS-1.3'), ('RRC14', 'RRC-1.4'), ('RRC15', 'RRC-1.5'), ('RRC16', 'RRC-1.6'), ('RRS17', 'RRS-1.7'), ('RRC18', 'RRC-1.8')], max_length=2, verbose_name='Question Code')),
                ('qtype', models.CharField(choices=[('label', 'Label'), ('text', 'Input Box'), ('narrative', 'Narrative'), ('yesno', 'Yes/No'), ('checkbox', 'Checkbox'), ('radio', 'Radio'), ('select', 'Dropdown'), ('slider', 'Slider'), ('file', 'File Upload')], max_length=1, verbose_name='Question Type')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strategy_question', to='projects.Strategy')),
            ],
            options={
                'verbose_name': 'StrategyQuestion',
                'verbose_name_plural': 'StrategyQuestions',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='annual_customer_load',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Annual Customer Load'),
        ),
        migrations.AddField(
            model_name='project',
            name='annual_purchased_elec',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Annual Purchased Electricity'),
        ),
        migrations.AddField(
            model_name='project',
            name='biomass_elec',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Biomass Electricity Generation'),
        ),
        migrations.AddField(
            model_name='project',
            name='chp_elec',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Local CHP natual gas Electricity Generation'),
        ),
        migrations.AddField(
            model_name='project',
            name='comm_industrial1',
            field=models.IntegerField(blank=True, null=True, verbose_name='No of small commercial and industrial customers'),
        ),
        migrations.AddField(
            model_name='project',
            name='comm_industrial2',
            field=models.IntegerField(blank=True, null=True, verbose_name='No of large commercial and industrial customers'),
        ),
        migrations.AddField(
            model_name='project',
            name='customer_hr_peak_demand',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Customer Annual Hourly Peak Demand'),
        ),
        migrations.AddField(
            model_name='project',
            name='geothermal_elec',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Geothermal Electricity Generation'),
        ),
        migrations.AddField(
            model_name='project',
            name='high_efficiency_gas_elec',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Local High Efficiency Electricity generation'),
        ),
        migrations.AddField(
            model_name='project',
            name='local_other_gas_elec',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Local other Gas Electricity Generation'),
        ),
        migrations.AddField(
            model_name='project',
            name='other_local_elec',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Other Renewable Electricity Generation'),
        ),
        migrations.AddField(
            model_name='project',
            name='peak_demand_unit',
            field=models.CharField(default='MW', max_length=10, verbose_name='Peak Demand Unit'),
        ),
        migrations.AddField(
            model_name='project',
            name='project_type',
            field=models.CharField(blank=True, choices=[('1', 'City'), ('2', 'Campus'), ('3', 'Supply')], max_length=1, null=True, verbose_name='Project Type'),
        ),
        migrations.AddField(
            model_name='project',
            name='purchased_hr_peak_demand',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Purchased annual hourly peak demand'),
        ),
        migrations.AddField(
            model_name='project',
            name='purchased_hr_unit',
            field=models.CharField(default='MW', max_length=10, verbose_name='Purchased Peak Demand Unit'),
        ),
        migrations.AddField(
            model_name='project',
            name='res_customer',
            field=models.IntegerField(blank=True, null=True, verbose_name='No of Residential Customer'),
        ),
        migrations.AddField(
            model_name='project',
            name='tnd_losses',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='T&D Losses'),
        ),
        migrations.AddField(
            model_name='project',
            name='tot_local_elec_generation',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Total Local Electricity Generation'),
        ),
        migrations.AddField(
            model_name='project',
            name='turbine_elec',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Local Turbine Electricity Generation'),
        ),
        migrations.AddField(
            model_name='project',
            name='wind_solar_pv_elec',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Wind Solar PV Electricity Generation'),
        ),
        migrations.AddField(
            model_name='projectquestion',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_question', to='projects.Project'),
        ),
        migrations.AddField(
            model_name='projectquestion',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_object', to='projects.StrategyQuestion'),
        ),
        migrations.AddField(
            model_name='projectplantmapping',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_plant', to='projects.Project'),
        ),
    ]
