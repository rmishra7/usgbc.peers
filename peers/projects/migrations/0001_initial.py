# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-08-09 09:01
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import projects.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditsAchieved',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_name', models.CharField(max_length=120, verbose_name='Credit Name')),
                ('category', models.CharField(choices=[('EEE', 'Energy Efficiency & Environment'), ('RR', 'Reliability Resiliency'), ('OE', 'Operation Effectiveness'), ('CC', 'Customer Contribution')], max_length=5, verbose_name='Credit Category')),
                ('city_credit', models.BooleanField(default=False, verbose_name='City Credit')),
                ('campus_credit', models.BooleanField(default=False, verbose_name='Campus Credit')),
                ('supply_credit', models.BooleanField(default=False, verbose_name='Supply Credit')),
                ('criteria', models.CharField(choices=[('DCN', 'Design Consideration'), ('PO', 'Performance Outcome'), ('DC', 'Demonstrated Capability'), ('PT', 'Performance Transparency'), ('SP', 'Standard Process')], max_length=5, verbose_name='Credit Criteria')),
                ('type', models.CharField(choices=[('PR', 'Pre Requistic'), ('CO', 'Core'), ('BO', 'Bonus')], max_length=5, verbose_name='Credit Type')),
                ('intent', models.CharField(max_length=200, verbose_name='Credit Intent')),
                ('delete', models.BooleanField(default=False, verbose_name='Delete')),
            ],
            options={
                'verbose_name': 'CreditsAchieved',
                'verbose_name_plural': 'CreditsAchieveds',
            },
        ),
        migrations.CreateModel(
            name='CreditsValueMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(default=0, max_length=10, verbose_name='Input Value')),
                ('from_credit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_credit_obj', to='projects.CreditsAchieved')),
                ('to_credit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_credit_obj', to='projects.CreditsAchieved')),
            ],
            options={
                'verbose_name': 'CreditsValueMapping',
                'verbose_name_plural': 'CreditsValueMappings',
            },
        ),
        migrations.CreateModel(
            name='ElectricityPlant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plant_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Plant Name')),
                ('fuel_type', models.CharField(choices=[('coal', 'Coal'), ('nuclear', 'Nuclear'), ('cas', 'Gas'), ('other mean', 'Other')], default='other mean', max_length=20, verbose_name='Fuel Type')),
                ('sei_value', models.CharField(default=0, max_length=10, verbose_name='SEI Value')),
                ('utility', models.CharField(choices=[('NTPC', 'NTPC'), ('NHPC', 'NHPC'), ('NPCIL', 'NPCIL'), ('IPGPCL', 'IPGPCL'), ('SEI', 'SEI Solar Energy Pvt. Ltd.')], max_length=10, verbose_name='Plant Utility')),
                ('type', models.CharField(choices=[('TRL', 'Thermal'), ('HDR', 'Hydro'), ('PV', 'PV')], max_length=10, verbose_name='Plant Type')),
                ('state', models.CharField(max_length=30, verbose_name='Plant State')),
                ('country', models.CharField(max_length=30, verbose_name='Plant Country')),
                ('delete', models.BooleanField(default=True, verbose_name='Delete')),
            ],
            options={
                'verbose_name': 'ElectricityPlant',
                'verbose_name_plural': 'ElectricityPlants',
            },
        ),
        migrations.CreateModel(
            name='ElectricityPlantUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_no', models.IntegerField(verbose_name='Plant Unit No.')),
                ('capacity', models.CharField(max_length=10, verbose_name='Plant Unit capacity')),
                ('commissioning', models.DateTimeField(blank=True, null=True, verbose_name='Plant Commissioning Date')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plant_unit', to='projects.ElectricityPlant')),
            ],
            options={
                'verbose_name': 'ElectricityPlantUnit',
                'verbose_name_plural': 'ElectricityPlantUnits',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Project Name')),
                ('description', models.TextField(verbose_name='Project Description')),
                ('city', models.CharField(max_length=40, verbose_name='City')),
                ('state', models.CharField(max_length=40, verbose_name='State/Province')),
                ('country', models.CharField(max_length=40, verbose_name='Country')),
                ('zipcode', models.CharField(max_length=20, verbose_name='Zipcode')),
                ('project_type', models.CharField(blank=True, choices=[('1', 'City'), ('2', 'Campus'), ('3', 'Supply')], max_length=10, null=True, verbose_name='Project Type')),
                ('org_name', models.CharField(max_length=80, verbose_name='Organization Name')),
                ('org_address', models.TextField(verbose_name='organisation Address')),
                ('poc_name', models.CharField(max_length=80, verbose_name='Point Of Contact Name')),
                ('poc_contact', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$'), django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(15)], verbose_name='Contact Number')),
                ('poc_email', models.EmailField(max_length=80, verbose_name='Point of Contact Email')),
                ('poc_designation', models.CharField(max_length=80, verbose_name='Point of Contact Designation')),
                ('res_customer', models.IntegerField(blank=True, null=True, verbose_name='No of Residential Customer')),
                ('comm_industrial1', models.IntegerField(blank=True, null=True, verbose_name='No of small commercial and industrial customers')),
                ('comm_industrial2', models.IntegerField(blank=True, null=True, verbose_name='No of large commercial and industrial customers')),
                ('annual_customer_load', models.CharField(blank=True, max_length=20, null=True, verbose_name='Annual Customer Load')),
                ('customer_hr_peak_demand', models.CharField(blank=True, max_length=20, null=True, verbose_name='Customer Annual Hourly Peak Demand')),
                ('peak_demand_unit', models.CharField(default='MW', max_length=10, verbose_name='Peak Demand Unit')),
                ('annual_purchased_elec', models.CharField(blank=True, max_length=20, null=True, verbose_name='Annual Purchased Electricity')),
                ('purchased_hr_peak_demand', models.CharField(blank=True, max_length=10, null=True, verbose_name='Purchased annual hourly peak demand')),
                ('purchased_hr_unit', models.CharField(default='MW', max_length=10, verbose_name='Purchased Peak Demand Unit')),
                ('tnd_losses', models.CharField(blank=True, max_length=10, null=True, verbose_name='T&D Losses')),
                ('tot_local_elec_generation', models.CharField(blank=True, max_length=10, null=True, verbose_name='Total Local Electricity Generation')),
                ('turbine_elec', models.CharField(blank=True, max_length=10, null=True, verbose_name='Local Turbine Electricity Generation')),
                ('chp_elec', models.CharField(blank=True, max_length=10, null=True, verbose_name='Local CHP natual gas Electricity Generation')),
                ('high_efficiency_gas_elec', models.CharField(blank=True, max_length=10, null=True, verbose_name='Local High Efficiency Electricity generation')),
                ('local_other_gas_elec', models.CharField(blank=True, max_length=10, null=True, verbose_name='Local other Gas Electricity Generation')),
                ('wind_solar_pv_elec', models.CharField(blank=True, max_length=10, null=True, verbose_name='Wind Solar PV Electricity Generation')),
                ('biomass_elec', models.CharField(blank=True, max_length=10, null=True, verbose_name='Biomass Electricity Generation')),
                ('geothermal_elec', models.CharField(blank=True, max_length=10, null=True, verbose_name='Geothermal Electricity Generation')),
                ('other_local_elec', models.CharField(blank=True, max_length=10, null=True, verbose_name='Other Renewable Electricity Generation')),
                ('status', models.CharField(choices=[('1', 'Basic'), ('2', 'Screening')], max_length=1, verbose_name='Project Status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='Project Unique ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('delete', models.BooleanField(default=False, verbose_name='Delete')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_create_by', to=settings.AUTH_USER_MODEL)),
                ('destroyed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_destroyed_by', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_owner', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='ProjectPlantMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('electricity_deliver', models.CharField(default=0, max_length=10, verbose_name='Electricity Delivered to Project')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elec_plant', to='projects.ElectricityPlant')),
                ('plant_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_plant_unit', to='projects.ElectricityPlantUnit')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_plant', to='projects.Project')),
            ],
            options={
                'verbose_name': 'ProjectPlantMapping',
                'verbose_name_plural': 'ProjectPlantMappings',
            },
        ),
        migrations.CreateModel(
            name='ProjectQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('output', models.CharField(max_length=50, verbose_name='Question output for project')),
                ('file', models.FileField(blank=True, null=True, upload_to=projects.models.question_file_upload, verbose_name='Question File for Project')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_question', to='projects.Project')),
            ],
            options={
                'verbose_name': 'ProjectQuestion',
                'verbose_name_plural': 'ProjectQuestions',
            },
        ),
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Strategy Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Strategy Description')),
                ('successmessage', models.TextField(blank=True, null=True, verbose_name='Strategy Success Message')),
                ('failuremessage', models.TextField(blank=True, null=True, verbose_name='Strategy Failure Message')),
                ('required', models.BooleanField(default=False, verbose_name='Strategy Required')),
                ('delete', models.BooleanField(default=False, verbose_name='Delete')),
                ('credit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_strategy', to='projects.CreditsAchieved')),
            ],
            options={
                'verbose_name': 'Strategy',
                'verbose_name_plural': 'Strategys',
            },
        ),
        migrations.CreateModel(
            name='StrategyQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='Question')),
                ('code', models.CharField(choices=[('RRS11', 'RRS-1.1'), ('RRS12', 'RRS-1.2'), ('RRS13', 'RRS-1.3'), ('RRC14', 'RRC-1.4'), ('RRC15', 'RRC-1.5'), ('RRC16', 'RRC-1.6'), ('RRS17', 'RRS-1.7'), ('RRC18', 'RRC-1.8'), ('EES31', 'EES-3.1'), ('EES32', 'EES-3.2'), ('EES33', 'EES-3.3'), ('EES34', 'EES-3.4'), ('EEC35', 'EEC-3.5'), ('EES121', 'EES-12.1'), ('EEC122', 'EEC-12.2'), ('OES61', 'OES-6.1'), ('OEC62', 'OEC-6.2'), ('CCS11', 'CCS-1.1'), ('CCS12', 'CCS-1.2'), ('CCC13', 'CCC-1.3'), ('CCC14', 'CCC-1.4')], max_length=10, verbose_name='Question Code')),
                ('qtype', models.CharField(choices=[('label', 'Label'), ('text', 'Input Box'), ('narrative', 'Narrative'), ('yesno', 'Yes/No'), ('checkbox', 'Checkbox'), ('radio', 'Radio'), ('select', 'Dropdown'), ('slider', 'Slider'), ('file', 'File Upload')], max_length=10, verbose_name='Question Type')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strategy_question', to='projects.Strategy')),
            ],
            options={
                'verbose_name': 'StrategyQuestion',
                'verbose_name_plural': 'StrategyQuestions',
            },
        ),
        migrations.AddField(
            model_name='projectquestion',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_object', to='projects.StrategyQuestion'),
        ),
    ]
